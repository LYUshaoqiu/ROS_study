2024/5/31 week1 and oweek
I started the first week by roughly following the
“http://www.autolabor.com.cn/book/ROSTutorials/chapter1/11-rosjian-jie-yu-an-zhuang/111rosgai-nian.html"
website to get the environment setup and infrastructure built in the manner given.

The version I used was————ROS Noetic Ninjemys

During the installation of the environment I encountered a major problem, the problem came from the communication between the virtual machine and itself. 
During my testing I found that he could access localhost, but he was never able to access 127.0.1.1. This value is used as the target value for virtual communication. 
In the system testing of ROS, I think it is currently constructed with two objects, one object is the host local house and one object is the receiver. 
The host local house is the local house receiver which is the 127.0.1.1 command object. The naming I set for him here is 1111.
In my pre-testing, I realized that he has not been able to connect to 1111, which made me feel very strange, I used many methods and checked its related configuration files, but it never worked. 
Until I used this one command, if I remember correctly.

export ROS_MASTER_URI=http://localhost:11311

---------------------------------------------------------------------------i have find the question---------------------------------------------------before/not real

Thanks for providing the IP address from your hostname -I command. The IP address 10.0.2.15 is the actual address of your machine on the network.

Here are the steps to correct the ROS configuration using this IP:

Set the ROS Environment Variables:

You should set the ROS_MASTER_URI to use this IP address. In your terminal, type the following command:
export ROS_MASTER_URI=http://10.0.2.15:11311

Edit /etc/hosts File:

It's important to ensure that any hostname used in your ROS configuration correctly maps to an IP address in your /etc/hosts file. 
If you've been trying to use 1111 as a hostname, make sure it points to 10.0.2.15, like this:
127.0.0.1    localhost
10.0.2.15    1111

Verify ROS_HOSTNAME or ROS_IP:

Depending on your setup, you might also need to set ROS_HOSTNAME or ROS_IP. Since you have the IP, you can set ROS_IP:
export ROS_IP=10.0.2.15

Restart ROS:

After setting these environment variables, restart ROS to apply the new settings.
Test the Configuration:

Test if the ROS master can now be contacted by starting roscore again. 
Additionally, you can test the network communication by pinging 10.0.2.15 or using rosnode list to see if nodes are correctly registering with the master.
These changes should help ensure that your ROS system correctly recognizes and communicates within its network environment. 
If there are still issues, make sure there are no firewall rules blocking the ROS communication ports, typically around 11311.



--------------------------------------------------------------------------------------------------------------------------------------------------


Here's the answer from querying the web
The ROS Master provides name registration and lookup to the rest of the nodes in the ROS network. 
By setting this environment variable, all ROS nodes By setting this environment variable, all ROS nodes started in this terminal session will know that they should connect to the ROS Master running at http://localhost:11311.

Key Points about ROS_MASTER_URI.
URL Format: The URI should be in the format http://hostname:port, where hostname is the name or IP address of the machine where the master is running, and port is the port on which it is listening.
Default Setting: The default port for the ROS Master is 11311, and often localhost is used when the master is running on the same machine as the nodes.

Purpose: This setting is crucial for multi-machine setups in ROS, where nodes might be distributed across different computers. 
It ensures that all nodes can communicate through a central hub, the centralized hub, and the centralized hub can be used by all nodes. It ensures that all nodes can communicate through a central hub, the ROS Master.



2024/6/14 week 3
I managed to write a small program using cpp from ros.

2024/6/19 week 4
Installation and setup of the ros tool environment is basically complete.

The following learning objectives are expected to be achieved this week.

Be able to skillfully introduce the commonly used communication mechanisms in ROS.
Be able to understand the theoretical model of each communication mechanism in ROS.
Be able to realize the cases corresponding to each communication mechanism by code.
Be able to skillfully use some operation commands in ROS.
Be able to independently complete related practical cases

-----------------------------------------------------------------------------------2024/6/20
I finally figured out what his problem was. 
It had to do with the ip settings of a couple of his environment variables. 
The core problem is that the iOS get ip and pass out ip must be set correctly.
Previously my settings were short term settings that didn't solve the underlying problem, poor this bug would keep recurring . Now I found his real reason.

1,check your ip

hostname -I

2,check 2 ip"localhost" and "1111/or other your set"
check /etc/hosts

sudo nano /etc/hosts

3, set the same ip with your own ip

4,run the new set
source ~/.bashrc

then-----

Configure ROS environment variables:

Add the following line to the ~/.bashrc file to ensure that ROS uses the correct IP address for communication:

export ROS_IP=10.0.2.15
export ROS_MASTER_URI=http://10.0.2.15:11311

(which you set before)

run the new set
source ~/.bashrc

it can work now
-----------------------------------------------------------------------------------------------------------------

Implemented simple topic communication via (c++ and python)














